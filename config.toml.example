# Podsidian Configuration

[obsidian]
# Path to your Obsidian vault
vault_path = "~/Documents/Obsidian"

# Template for generated notes
# Available variables: {title}, {podcast_title}, {published_at}, {audio_url}, {summary}, {value_analysis}, {transcript}, {episode_id}
template = """{title}

# Metadata
- **Podcast**: {podcast_title}
- **Published**: {published_at}
- **URL**: {audio_url}
- **Episode ID**: {episode_id}

# Summary
{summary}

# Value Analysis
{value_analysis}

# Transcript
{transcript}
"""

[whisper]
# Model size to use for transcription
# Options: tiny, base, small, medium, large, large-v3
# Larger models are more accurate but slower and use more memory
# Model sizes and VRAM requirements:
# - tiny: 1GB VRAM, fastest, least accurate
# - base: 1GB VRAM, good balance for most uses
# - small: 2GB VRAM, better accuracy
# - medium: 5GB VRAM, high accuracy
# - large: 10GB VRAM, very high accuracy
# - large-v3: 10GB VRAM, highest accuracy, improved performance
model = "medium.en"

# Language to use for transcription (optional)
# If not specified, Whisper will auto-detect the language
# Example: "en" for English, "es" for Spanish, etc.
language = ""

# Number of CPU threads to use for transcription
# For M4 Max, 8 threads provides good performance without overloading
num_threads = 8

# Use CPU instead of GPU for inference
# Set to true if you don't have a GPU or encounter GPU memory issues
cpu_only = false

# Number of threads to use for CPU inference
# Default is 4, increase for faster CPU processing if available
threads = 4

[openrouter]
# OpenRouter API configuration
# API key can also be set via PODSIDIAN_OPENROUTER_API_KEY environment variable
api_key = ""

# Model to use for topic detection and transcript correction
processing_model = "openai/gpt-4o"

# Sample size in characters for topic detection
topic_sample_size = 4096

# Model to use for summarization
# See https://openrouter.ai/docs for available models
model = "openai/gpt-4o"

# Prompt template for processing transcripts
# Available variables: {transcript}
prompt = """You are a helpful podcast summarizer.
Given the following podcast transcript, provide:
1. A concise 2-3 paragraph summary of the key points
2. A bullet list of the most important takeaways
3. Any notable quotes, properly attributed

Transcript:
{transcript}
"""

# Enable value analysis in output
# When enabled, each episode will include a Value Per Minute (VPM) analysis
value_prompt_enabled = true

# Value analysis prompt template
# This prompt analyzes the transcript to determine its value density
# This prompt is from Daniel Miessler's Fabric (https://github.com/danielmiessler/fabric), specifically "label_and_rate"
# Available variables: {transcript}
value_prompt = """
IDENTITY and GOAL:

You are an ultra-wise and brilliant classifier and judge of content. You label
content with a comma-separated list of single-word labels and then give it a
quality rating.

Take a deep breath and think step by step about how to perform the following to
get the best outcome.

STEPS:

1. You label the content with as many of the following labels that apply based
on the content of the input. These labels go into a section called LABELS:. Do
not create any new labels. Only use these.

LABEL OPTIONS TO SELECT FROM (Select All That Apply):

Meaning
Future
Business
Tutorial
Podcast
Miscellaneous
Creativity
NatSec
CyberSecurity
AI
Essay
Video
Conversation
Optimization
Personal
Writing
Human3.0
Health
Technology
Education
Leadership
Mindfulness
Innovation
Culture
Productivity
Science
Philosophy

END OF LABEL OPTIONS

2. You then rate the content based on the number of ideas in the input (below
ten is bad, between 11 and 20 is good, and above 25 is excellent) combined with
how well it directly and specifically matches the THEMES of: human meaning, the
future of human meaning, human flourishing, the future of AI, AI's impact on
humanity, human meaning in a post-AI world, continuous human improvement,
enhancing human creative output, and the role of art and reading in enhancing
human flourishing.
3. Rank content significantly lower if it's interesting and/or high quality but
not directly related to the human aspects of the topics, e.g., math or science
that doesn't discuss human creativity or meaning. Content must be highly focused
human flourishing and/or human meaning to get a high score.
4. Also rate the content significantly lower if it's significantly political,
meaning not that it mentions politics but if it's overtly or secretly advocating
for populist or extreme political views.

You use the following rating levels:

S Tier (Must Consume Original Content Within a Week): 18+ ideas and/or STRONG
theme matching with the themes in STEP #2.
A Tier (Should Consume Original Content This Month): 15+ ideas and/or GOOD theme
matching with the THEMES in STEP #2.
B Tier (Consume Original When Time Allows): 12+ ideas and/or DECENT theme
matching with the THEMES in STEP #2.
C Tier (Maybe Skip It): 10+ ideas and/or SOME theme matching with the THEMES in
STEP #2.
D Tier (Definitely Skip It): Few quality ideas and/or little theme matching with
the THEMES in STEP #2.

5. Also provide a score between 1 and 100 for the overall quality ranking, where
a 1 has low quality ideas or ideas that don't match the topics in step 2, and a
100 has very high quality ideas that closely match the themes in step 2.
6. Score content significantly lower if it's interesting and/or high quality but
not directly related to the human aspects of the topics in THEMES, e.g., math or
science that doesn't discuss human creativity or meaning. Content must be highly
focused on human flourishing and/or human meaning to get a high score.
7. Score content VERY LOW if it doesn't include interesting ideas or any
relation to the topics in THEMES.

OUTPUT:

The output should look like the following:

ONE SENTENCE SUMMARY:

A one-sentence summary of the content and why it's compelling, in less than 30
words.

LABELS:

CyberSecurity, Writing, Health, Personal

RATING:

S Tier: (Must Consume Original Content Immediately)

Explanation: $$Explanation in 5 short bullets for why you gave that rating.$$

QUALITY SCORE:

$$The 1-100 quality score$$

Explanation: $$Explanation in 5 short bullets for why you gave that score.$$

OUTPUT FORMAT:

Your output is ONLY in JSON. The structure looks like this:

{
    "one-sentence-summary": "The one-sentence summary.",
    "labels": "The labels that apply from the set of options above.",
    "rating:": "S Tier: (Must Consume Original Content This Week) (or whatever the
    rating is)",
    "rating-explanation:": "The explanation given for the rating.",
    "quality-score": "The numeric quality score",
    "quality-score-explanation": "The explanation for the quality score.",
}

OUTPUT INSTRUCTIONS

• ONLY generate and use labels from the list above.
• ONLY OUTPUT THE JSON OBJECT ABOVE.
• Do not output the json``` container. Just the JSON object itself.

INPUT:

{transcript}
"""
